#!/usr/bin/python
import subprocess
import BaseHTTPServer
import cgi

# These variables are used as settings
PORT       = 9090         # the port in which the captive portal web server listens 
IFACE      = "mnet0"      # the interface that captive portal protects
IP_ADDRESS = "10.0.0.1" # the ip address of the captive portal (it can be the IP of IFACE) 

'''
This it the http server used by the the captive portal
'''
class WebPortal(BaseHTTPServer.BaseHTTPRequestHandler):
    #this is the index of the captive portal
    #it simply redirects the user to the to login page
    html_redirect = """
    <html>
    <head>
        <meta http-equiv="refresh" content="0; url=http://%s:%s/login" />
    </head>
    <body>
        <b>Redirecting to login page</b>
    </body>
    </html>
    """%(IP_ADDRESS, PORT)
    #the login page
    html_login = """
    <html>
    <head>
        <title>mnet agree</title>
        <style>
            body {
            color:#F1F3F3;
            background-image: url("https://wallpapercave.com/wp/tmHAeyV.jpg");
            height: 100%; width: 100%;
            no-repeat center center fixed;
            -webkit-background-size: cover;
            -moz-background-size: cover;
            -o-background-size: cover;
            background-size: cover;
            }
        </style>
    </head>
    <body>
        <img src="https://www.materialui.co/materialIcons/device/signal_wifi_statusbar_connected_no_internet_4_white_36x33.png" style="float:left"><b>mnet</br></left>
        <p>This network is repeating another network to devices that may not be authorized on the repeated network...</p>
        <form method="POST" action="do_login" name=agree>I understand and/or do not care, connect me...<input type="checkbox" onchange="document.getElementById('agree').disabled = !this.checked;" /><input type="submit" name="agree" class="inputButton" id="agree" value="Connect"  disabled /></style></form>
    </body>
    </html>
    """
    #connected page
    html_connected = """
    <html>
    <head>
        <title>mnet connected</title>
        <style>
            body {
            color:#F1F3F3;
            background-color:black;
            height: 100%; width: 100%;
            no-repeat center center fixed;
            -webkit-background-size: cover;
            -moz-background-size: cover;
            -o-background-size: cover;
            background-size: cover;
            }
        </style>
    </head>
    <body>
        <img src="https://www.materialui.co/materialIcons/device/signal_wifi_statusbar_4_bar_white_36x33.png" style="float:left" /><b>mnet</br></left>
        <p>Connected</p>
    </body>
    </html>
    """
    '''
    if the user requests the login page show it, else
    use the redirect page
    '''
    def do_GET(self):
        path = self.path
        self.send_response(200)
        self.send_header("Content-type", "text/html")
        self.end_headers()
        if path == "/login":
            self.wfile.write(self.html_login)
        else:
            self.wfile.write(self.html_redirect)
    '''
    this is called when the user submits the login form
    '''
    def do_POST(self):
        self.send_response(200)
        self.send_header("Content-type", "text/html")
        self.end_headers()
        form = cgi.FieldStorage(
            fp=self.rfile, 
            headers=self.headers,
            environ={'REQUEST_METHOD':'POST',
                     'CONTENT_TYPE':self.headers['Content-Type'],
                     })
        #Converted to a "click-through" portal
        #username = form.getvalue("username")
        #password = form.getvalue("password")
        #dummy security check
        #if username == 'nikos' and password == 'fotiou':
        agree = form.getvalue("agree")
        if agree == 'Connect':
            #authorized user
            remote_IP = self.client_address[0]
            print 'New authorization from '+ remote_IP
            print 'Updating IP tables'
            subprocess.call(["iptables","-t", "nat", "-I", "PREROUTING","1", "-s", remote_IP, "-j" ,"ACCEPT"])
            subprocess.call(["iptables", "-I", "FORWARD", "-s", remote_IP, "-j" ,"ACCEPT"])
            self.wfile.write(self.html_connected)
        else:
            #show the login form
            self.wfile.write(self.html_login)
        
    #the following function makes server produce no output
    #comment it out if you want to print diagnostic messages
    #def log_message(self, format, *args):
    #    return
    #COLORFULL OUTPUT
GRAY="\033[01;30m"
CYAN="\033[01;36m"
GREEN="\033[01;32m"
RED="\033[01;31m"
CEND="\033[0m"
print GRAY + "====================================================================================" + CEND
print CYAN +"mserv"+ CEND,
print "|mnet web/portal|uses iptables with python/baseHTTPServer|",
print GREEN + "setup portal" + CEND,
print "|"
print GRAY + "====================================================================================" + CEND
print GREEN + "ALLOW" + CEND,
print "TCP PORT 53",
print CYAN + "                                                     DNS" + CEND,
print "TABLE",
subprocess.call(["iptables", "-A", "FORWARD", "-i", IFACE, "-p", "tcp", "--dport", "53", "-j" ,"ACCEPT"])
print GREEN +"SET"+ CEND
print GREEN + "ALLOW" + CEND,
print "UDP PORT 53",
print CYAN + "                                                     DNS" + CEND,
print "TABLE",
subprocess.call(["iptables", "-A", "FORWARD", "-i", IFACE, "-p", "udp", "--dport", "53", "-j" ,"ACCEPT"])
print GREEN +"SET"+ CEND
print GREEN + "ALLOW" + CEND,
print "LOCAL SERVER",
print CYAN +"                                                 PORTAL"+CEND,
print "TABLE",
subprocess.call(["iptables", "-A", "FORWARD", "-i", IFACE, "-p", "tcp", "--dport", str(PORT),"-d", IP_ADDRESS, "-j" ,"ACCEPT"])
print GREEN +"SET"+ CEND
print RED +"BLOCK"+ CEND,
print "UNAUTHORIZED",
print RED +"                                                   DROP"+ CEND,
print "TABLE",
subprocess.call(["iptables", "-A", "FORWARD", "-i", IFACE, "-j" ,"DROP"])
print GREEN +"SET"+ CEND
print GRAY +"===================================================================================="+ CEND
print CYAN+"mserv"+ CEND,
print "| starting web server.. |",
httpd = BaseHTTPServer.HTTPServer(('', PORT), WebPortal)
print "redirecting HTTP                   |",
subprocess.call(["iptables", "-t", "nat", "-A", "PREROUTING", "-i", IFACE, "-p", "tcp", "--dport", "80", "-j" ,"DNAT", "--to-destination", IP_ADDRESS+":"+str(PORT)])
print CYAN+IP_ADDRESS+ ':'+str(PORT)+ CEND,
print GRAY+"|"+CEND
print GRAY +"===================================================================================="+ CEND

try:
    httpd.serve_forever()
except KeyboardInterrupt:
    pass
httpd.server_close()
